{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","Weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKACMA,EACA,mCADAA,EAEC,2CA8DQC,MA1Df,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEGC,EAFH,KA+Bb,OACE,qBAAKC,UAAiC,oBAAdF,EAAQG,MAAqBH,EAAQG,KAAKC,KAAK,GAAI,WAAkB,MAA7F,SACE,iCACE,qBAAKF,UAAU,YAAf,SACE,uBACAG,KAAM,OACNH,UAAU,YACVI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAET,EAASS,EAAEC,OAAOC,QAC/BA,MAAOZ,EACPa,WArCO,SAAAC,GACC,UAAXA,EAAIC,KAGLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEFjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA6BW,oBAAhBlB,EAAQG,KACf,gCACI,sBAAKD,UAAU,cAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SA1BQ,SAACsB,GAEnB,IAEIC,EADK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YACzDD,EAAEE,UACXC,EAAKH,EAAEI,UACPC,EAJQ,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAI9FL,EAAEM,YAChBC,EAAKP,EAAEQ,cACX,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAkBDE,CAAa,IAAIC,WAE1C,qBAAKhC,UAAU,aAAf,SACE,sBAAKA,UAAU,OAAf,UAAuBiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAA/C,gBAGH,SChDIiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9b7a4d83.chunk.js","sourcesContent":["import React,{useState} from 'react';\nconst api={\n  key:\"80ebcd1109ba376b3bcb8468c26c5496\",\n  base:\"https://api.openweathermap.org/data/2.5/\",\n}\n\n\nfunction App() {\n  const [query, setQuery]=useState('');\n  const [Weather, setWeather]=useState({});\n  \n  const search = evt =>{\n    if(evt.key ===\"Enter\"){\n      //?q={city name}&appid={API key}\n\n      fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\n      .then(res=>res.json())\n      .then(result=>\n        {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }\n      );\n    }\n  }\n\n  \n  const dateBuilder = (d) =>\n  {\n    let months =[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n    let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n    let day=days[d.getDay()];\n    let date=d.getDate();\n    let month= months[d.getMonth()];\n    let year=d.getFullYear();\n    return `${day} ${date} ${month} ${year}`\n  } \n  return (\n    <div className={(typeof Weather.main!=\"undefined\")?((Weather.main.temp>16)?'app warm':'app'):'app'}>\n      <main>\n        <div className=\"searchBox\">\n          <input\n          type =\"text\"\n          className=\"searchBar\"\n          placeholder=\"search...\"\n          onChange={e=>setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}/>\n        </div>\n        {(typeof Weather.main != \"undefined\")?(\n          <div>\n              <div className=\"locationBox\">\n              <div className=\"location\">{Weather.name},{Weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder (new Date())}</div>\n            </div>\n            <div className=\"weatherBox\">\n              <div className=\"temp\">{Math.round(Weather.main.temp)}Â°c</div>\n            </div>\n          </div>\n        ):('')}\n      </main>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}